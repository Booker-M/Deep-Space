{"version":3,"sources":["cast/star.js","textures/2_no_clouds_4k.jpg","textures/water_4k.png","textures/fair_clouds_4k.png","cast/earth.js","textures/moon_color.png","cast/moon.js","cast/laser.js","utilities/utilities.js","textures/krakenEye.jpg","cast/kraken.js","textures/enemyTexture.jpg","cast/enemyShip.js","cast/healthpotion.js","textures/crystal.jpg","cast/pylon.js","UI/score.js","UI/healthbar.js","UI/restart.js","textures/shipBubble.jpg","textures/spaceshiptexture.jpg","cast/spaceship.js","universes/demo-universe.js","App.js","reportWebVitals.js","index.js"],"names":["Star","geometry","SphereGeometry","material","MeshPhongMaterial","color","transparent","opacity","mesh","Mesh","this","group","Group","add","type","position","x","Earth","loader","TextureLoader","texture","load","EarthTexture","cloud_text","CloudTexture","sm","EarthSpecular","earth_geo","earth_mat","map","specularMap","specular","Color","cloud_geo","cloud_mat","earth","cloud","rotation","y","Moon","MoonTexture","Laser","radius","xVel","stop","set","z","velocity","setOpacity","object","children","forEach","child","h1","r1","h2","r2","r3","r4","BASE_VERTICES","Math","sqrt","tentacleCurve","counter","scale","t","optionalTarget","Vector3","tx","ty","sin","PI","tz","multiplyScalar","Curve","Kraken","baseColor","random","MeshPhysicalMaterial","vertexColors","side","DoubleSide","facetedGeometry","BufferGeometry","BASE_COLORS","vertices","Float32Array","setAttribute","BufferAttribute","tiles","i","push","colors","computeVertexNormals","createKrakenHead","facetedMesh","rotateX","rotateY","EyeTexture","leftEyeGeometry","leftEye","rightEyeGeometry","rightEye","path","tentacleGeometry","TubeGeometry","d","h","r","tentacle1","tentacle2","tentacle3","tentacle4","tentacle5","tentacle6","tentacle7","tentacle8","tentacles","maxVelocity","health","cooldown","hit","min","max","tentacle","BODY_VERTICES","TEXTURE_VERTICES","COLOR_PALLET","EnemyShip","shoot","bodyMaterial","MeshLambertMaterial","ShipTexture","enemyGeom","textureCoords","setIndex","createShipBody","enemyMesh","jetRingMaterial","jetMaterial","jetGeometry","CylinderGeometry","jetFrontGeometry","nobGeo","jetMesh1","jetFrontMesh","jetMesh2","jetRingGeo","TorusGeometry","jetRingMesh1","jetRingMesh2","nob1","nob2","nob3","rotateZ","HealthPotion","smoothGeometry","createSmoothPeridotGeometry","smoothMesh","crossGeometry","BoxGeometry","crossMaterial","crossMesh","crossMesh2","Pylon","Crystal","Geometry","faces","Face3","f","length","faceVertexUvs","materialIndex","Vector2","uvsNeedUpdate","MeshBasicMaterial","BackSide","crystal","ring","Score","UI","score","FontLoader","font","TextGeometry","size","height","curveSegments","bevelEnabled","center","MeshNormalMaterial","scoreText","Healthbar","translate","holder","Restart","restartText","restart","WING_VERTICES","createSpaceShipWing","Spaceship","boundary","spin","bubbleMaterial","ShipBubble","bodyGeometry","createSpaceShip","bodyMesh","wingGeometryL","wingGeometryR","leftWingMesh","rightWingMesh","bubbleGeometry","bubbleMesh","width","abs","HIT_COOLDOWN","createDemoUniverse","fieldOfView","nearPlane","farPlane","keyMap","background","Set","enemies","shipLasers","enemyLasers","healthItems","pylons","gameOver","pauseDelay","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","AmbientLight","directionalLight","DirectionalLight","target","updateScore","amount","remove","healthbar","ship","refreshParticle","start","minZ","newPlanet","number","planet","newStar","star","action","craft","laser","update","enemy","shipCollision","enemyCollision","o","move","animate","updateCooldowns","checkCollision","updateHealth","endGame","a","b","getDistance","pow","delete","toggleAction","vector","getInput","accelerate","getWorldDirection","sub","window","requestAnimationFrame","render","floor","newEnemy","healthpotion","newHealthItem","pylon","newPylon","getAction","getGameOver","e","RADIAN_CONVERSION","App","useState","universe","setUniverse","cameraControl","setCameraControl","viewport","useRef","useEffect","viewportElement","current","innerWidth","innerHeight","innerHTML","appendChild","domElement","handleKeys","event","keyCode","className","ref","onMouseDown","onMouseMove","translateZ","movementX","movementY","onMouseUp","onKeyDown","onKeyUp","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d951887.chunk.js","sourcesContent":["/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { SphereGeometry, MeshPhongMaterial, Mesh, Group } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Star {\r\n  constructor() {\r\n    const geometry = new SphereGeometry(1, 4, 4)\r\n    const material = new MeshPhongMaterial({ color: 'white', transparent: true, opacity: 0.8 })\r\n    const mesh = new Mesh(geometry, material)\r\n\r\n    this.group = new Group()\r\n    this.group.add(mesh)\r\n    this.type = 'star'\r\n  }\r\n\r\n  move() {\r\n    this.group.position.x -= 0.5\r\n  }\r\n}\r\n\r\nexport default Star\r\n","export default __webpack_public_path__ + \"static/media/2_no_clouds_4k.825a0ecf.jpg\";","export default __webpack_public_path__ + \"static/media/water_4k.f67af4c5.png\";","export default __webpack_public_path__ + \"static/media/fair_clouds_4k.67a542cb.png\";","/**\r\n * EarthTexture source: http://www.shadedrelief.com/natural3/pages/textures.html\r\n * EarthSpecular and CloudTexture source: https://blog.mastermaps.com/2013/09/creating-webgl-earth-with-threejs.html\r\n * @author Damian Browne\r\n */\r\nimport { Mesh, SphereGeometry, MeshPhongMaterial, TextureLoader, Color, Group } from 'three'\r\nimport EarthTexture from '../textures/2_no_clouds_4k.jpg'\r\nimport EarthSpecular from '../textures/water_4k.png'\r\nimport CloudTexture from '../textures/fair_clouds_4k.png'\r\n\r\nclass Earth {\r\n  constructor() {\r\n    const loader = new TextureLoader()\r\n    const texture = loader.load(EarthTexture)\r\n    const cloud_text = loader.load(CloudTexture)\r\n    const sm = loader.load(EarthSpecular)\r\n    const earth_geo = new SphereGeometry(1, 8, 8)\r\n    const earth_mat = new MeshPhongMaterial({ map: texture, specularMap: sm, specular: new Color('grey') })\r\n    const cloud_geo = new SphereGeometry(1.01, 12, 12)\r\n    const cloud_mat = new MeshPhongMaterial({ map: cloud_text, transparent: true })\r\n    const earth = new Mesh(earth_geo, earth_mat)\r\n    const cloud = new Mesh(cloud_geo, cloud_mat)\r\n\r\n    this.group = new Group()\r\n    this.group.add(earth, cloud)\r\n    this.type = 'planet'\r\n  }\r\n\r\n  move(position) {\r\n    this.group.position.x -= 0.08\r\n    this.group.rotation.y += 0.001\r\n  }\r\n}\r\n\r\nexport default Earth\r\n","export default __webpack_public_path__ + \"static/media/moon_color.758452fb.png\";","/**\r\n * MoonTexture courtesy of NASA: https://svs.gsfc.nasa.gov/4720\r\n * @author Damian Browne\r\n */\r\nimport { Group, Mesh, SphereGeometry, MeshPhongMaterial, TextureLoader } from 'three'\r\nimport MoonTexture from '../textures/moon_color.png'\r\n\r\nclass Moon {\r\n  constructor() {\r\n    const loader = new TextureLoader()\r\n    const texture = loader.load(MoonTexture)\r\n    const geometry = new SphereGeometry(1, 8, 8)\r\n    const material = new MeshPhongMaterial({ map: texture })\r\n    const mesh = new Mesh(geometry, material)\r\n\r\n    this.group = new Group()\r\n    this.group.add(mesh)\r\n    this.type = 'planet'\r\n  }\r\n\r\n  move(position) {\r\n    this.group.position.x -= 0.1\r\n    this.group.rotation.y += 0.001\r\n  }\r\n}\r\n\r\nexport default Moon\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { SphereGeometry, MeshPhongMaterial, Mesh, Group } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Laser {\r\n  constructor(color, radius, position, xVel, stop) {\r\n    this.geometry = new SphereGeometry(radius)\r\n    this.material = new MeshPhongMaterial({ color, transparent: true, opacity: 0.8 })\r\n    this.mesh = new Mesh(this.geometry, this.material)\r\n    this.group = new Group()\r\n    this.group.add(this.mesh)\r\n    this.group.position.set(position.x, position.y, position.z)\r\n    this.radius = radius\r\n    this.velocity = { x: xVel }\r\n    this.stop = stop + this.radius\r\n  }\r\n\r\n  move() {\r\n    this.group.position.x += this.velocity.x\r\n  }\r\n}\r\n\r\nexport default Laser\r\n","/**\r\n * Function to set an object's opacity by updating its group's children's materials\r\n */\r\nconst setOpacity = (object, opacity) => {\r\n  if (object.material) {\r\n    object.material.transparent = true\r\n    object.material.opacity = opacity\r\n  } else if (object.group) {\r\n    object.group.children.forEach(child => {\r\n      setOpacity(child, opacity)\r\n    })\r\n  } else if (object.children) {\r\n    object.children.forEach(child => {\r\n      setOpacity(child, opacity)\r\n    })\r\n  }\r\n}\r\n\r\nexport { setOpacity }\r\n","export default __webpack_public_path__ + \"static/media/krakenEye.bc1d18a8.jpg\";","import {\r\n  SphereGeometry,\r\n  TubeGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Mesh,\r\n  Group,\r\n  DoubleSide,\r\n  Curve,\r\n  Vector3,\r\n  Color,\r\n  MeshPhysicalMaterial,\r\n  TextureLoader\r\n} from 'three'\r\nimport { setOpacity } from '../utilities/utilities'\r\nimport EyeTexture from '../textures/krakenEye.jpg'\r\n\r\n// Here’s a case where Prettier doesn’t quite do the best job so we take the responsibility of formatting\r\n// this ourselves.\r\n//\r\n// prettier-ignore\r\nconst h0 = 2, h1 = 1.6, r1 = 0.7, h2 = 0.7, r2 = 0.85, r3 = 0.7, r4 = 0.75\r\nconst BASE_VERTICES = [\r\n  [0, h0, 0], //very top\r\n  [r1, h1, 0], //top right\r\n  [Math.sqrt((r1 * r1) / 2), h1, Math.sqrt((r1 * r1) / 2)], //top front right\r\n  [0, h1, r1 * 1.1], //top front\r\n  [-Math.sqrt((r1 * r1) / 2), h1, Math.sqrt((r1 * r1) / 2)], //top front left\r\n  [-r1, h1, 0], //top left\r\n  [-Math.sqrt((r1 * r1) / 2), h1, -Math.sqrt((r1 * r1) / 2)], //top back left\r\n  [0, h1, -r1], //top back\r\n  [Math.sqrt((r1 * r1) / 2), h1, -Math.sqrt((r1 * r1) / 2)], //top back right\r\n  [r2, h2, 0], //middle right\r\n  [Math.sqrt((r2 * r2) / 2), h2, Math.sqrt((r2 * r2) / 2)], //middle front right\r\n  [0, h2 * 0.9, r2 * 1.2], //middle front\r\n  [-Math.sqrt((r2 * r2) / 2), h2, Math.sqrt((r2 * r2) / 2)], //middle front left\r\n  [-r2, h2, 0], //middle left\r\n  [-Math.sqrt((r2 * r2) / 2), h2, -Math.sqrt((r2 * r2) / 2)], //middle back left\r\n  [0, h2, -r2], //middle back\r\n  [Math.sqrt((r2 * r2) / 2), h2, -Math.sqrt((r2 * r2) / 2)], //middle back right\r\n  [r3, 0, 0], //bottom right\r\n  [Math.sqrt((r3 * r3) / 2), 0, Math.sqrt((r3 * r3) / 2)], //bottom front right\r\n  [0, 0 * 0.9, r3 * 1.1], //bottom front\r\n  [-Math.sqrt((r3 * r3) / 2), 0, Math.sqrt((r3 * r3) / 2)], //bottom front left\r\n  [-r3, 0, 0], //bottom left\r\n  [-Math.sqrt((r3 * r3) / 2), 0, -Math.sqrt((r3 * r3) / 2)], //bottom back left\r\n  [0, 0, -r3], //bottom back\r\n  [Math.sqrt((r3 * r3) / 2), 0, -Math.sqrt((r3 * r3) / 2)], //bottom back right\r\n  [r4, -r4, -r3], //face right\r\n  [Math.sqrt((r4 * r4) / 2), -r4 - Math.sqrt((r4 * r4) / 2), -r3], //face front right\r\n  [0, -2 * r4, -r3], //face front\r\n  [-Math.sqrt((r4 * r4) / 2), -r4 - Math.sqrt((r4 * r4) / 2), -r3], //face front left\r\n  [-r4, -r4, -r3], //face left\r\n  [-Math.sqrt((r4 * r4) / 2), -Math.sqrt((r4 * r4) / 2), -r3], //face back left\r\n  [0, 0, -r3], //face back\r\n  [Math.sqrt((r4 * r4) / 2), -Math.sqrt((r4 * r4) / 2), -r3], //face back right\r\n  [0, -r4, -r3 - 0.2] //very bottom\r\n]\r\n// prettier-ignore\r\n\r\n/**\r\n * Creates a custom geometry out of a raw listing of vertices. Working this out on graph paper can be\r\n * a good first step here! Alternatively, you can write some code to generate these vertices, if the\r\n * shape that you have in mind can be computed in some way.\r\n */\r\nconst createKrakenHead = (baseColor) => {\r\n  const geometry = new BufferGeometry()\r\n\r\n  const BASE_COLORS = [\r\n    [ baseColor[0]+0.5, baseColor[1]+0.5, baseColor[2]+0.5 ],\r\n    [ baseColor[0]+0.3, baseColor[1]+0.3, baseColor[2]+0.3 ],\r\n    [ baseColor[0]+0.2, baseColor[1]+0.2, baseColor[2]+0.2 ],\r\n  ]\r\n\r\n  // We build each triangle as a separate face, copying a vertex if needed. Remember, counterclockwise\r\n  // is the “front.”\r\n  //\r\n  // prettier-ignore\r\n  const vertices = new Float32Array([\r\n    //top quadrant\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[1], ...BASE_VERTICES[8],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[2], ...BASE_VERTICES[1],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[3], ...BASE_VERTICES[2],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[4], ...BASE_VERTICES[3],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[5], ...BASE_VERTICES[4],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[6], ...BASE_VERTICES[5],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[7], ...BASE_VERTICES[6],\r\n    ...BASE_VERTICES[0], ...BASE_VERTICES[8], ...BASE_VERTICES[7],\r\n    //middle quadrant\r\n    ...BASE_VERTICES[1], ...BASE_VERTICES[9], ...BASE_VERTICES[16],\r\n    ...BASE_VERTICES[1], ...BASE_VERTICES[16], ...BASE_VERTICES[8],\r\n    ...BASE_VERTICES[8], ...BASE_VERTICES[16], ...BASE_VERTICES[15],\r\n    ...BASE_VERTICES[8], ...BASE_VERTICES[15], ...BASE_VERTICES[7],\r\n    ...BASE_VERTICES[7], ...BASE_VERTICES[15], ...BASE_VERTICES[14],\r\n    ...BASE_VERTICES[7], ...BASE_VERTICES[14], ...BASE_VERTICES[6],\r\n    ...BASE_VERTICES[6], ...BASE_VERTICES[14], ...BASE_VERTICES[13],\r\n    ...BASE_VERTICES[6], ...BASE_VERTICES[13], ...BASE_VERTICES[5],\r\n    ...BASE_VERTICES[5], ...BASE_VERTICES[13], ...BASE_VERTICES[12],\r\n    ...BASE_VERTICES[5], ...BASE_VERTICES[12], ...BASE_VERTICES[4],\r\n    ...BASE_VERTICES[4], ...BASE_VERTICES[12], ...BASE_VERTICES[3],\r\n    ...BASE_VERTICES[3], ...BASE_VERTICES[12], ...BASE_VERTICES[11],\r\n    ...BASE_VERTICES[3], ...BASE_VERTICES[11], ...BASE_VERTICES[10],\r\n    ...BASE_VERTICES[3], ...BASE_VERTICES[10], ...BASE_VERTICES[2],\r\n    ...BASE_VERTICES[2], ...BASE_VERTICES[10], ...BASE_VERTICES[9],\r\n    ...BASE_VERTICES[2], ...BASE_VERTICES[9], ...BASE_VERTICES[1],\r\n    //bottom quadrant\r\n    ...BASE_VERTICES[9], ...BASE_VERTICES[17], ...BASE_VERTICES[24],\r\n    ...BASE_VERTICES[9], ...BASE_VERTICES[24], ...BASE_VERTICES[16],\r\n    ...BASE_VERTICES[16], ...BASE_VERTICES[24], ...BASE_VERTICES[23],\r\n    ...BASE_VERTICES[16], ...BASE_VERTICES[23], ...BASE_VERTICES[15],\r\n    ...BASE_VERTICES[15], ...BASE_VERTICES[23], ...BASE_VERTICES[22],\r\n    ...BASE_VERTICES[15], ...BASE_VERTICES[22], ...BASE_VERTICES[14],\r\n    ...BASE_VERTICES[14], ...BASE_VERTICES[22], ...BASE_VERTICES[21],\r\n    ...BASE_VERTICES[14], ...BASE_VERTICES[21], ...BASE_VERTICES[13],\r\n    ...BASE_VERTICES[13], ...BASE_VERTICES[21], ...BASE_VERTICES[20],\r\n    ...BASE_VERTICES[13], ...BASE_VERTICES[20], ...BASE_VERTICES[12],\r\n    ...BASE_VERTICES[12], ...BASE_VERTICES[20], ...BASE_VERTICES[19],\r\n    ...BASE_VERTICES[12], ...BASE_VERTICES[19], ...BASE_VERTICES[11],\r\n    ...BASE_VERTICES[11], ...BASE_VERTICES[19], ...BASE_VERTICES[10],\r\n    ...BASE_VERTICES[10], ...BASE_VERTICES[19], ...BASE_VERTICES[18],\r\n    ...BASE_VERTICES[10], ...BASE_VERTICES[18], ...BASE_VERTICES[17],\r\n    ...BASE_VERTICES[10], ...BASE_VERTICES[17], ...BASE_VERTICES[9],\r\n    //face quadrant\r\n    ...BASE_VERTICES[17], ...BASE_VERTICES[25], ...BASE_VERTICES[32],\r\n    ...BASE_VERTICES[17], ...BASE_VERTICES[32], ...BASE_VERTICES[24],\r\n    ...BASE_VERTICES[24], ...BASE_VERTICES[32], ...BASE_VERTICES[31],\r\n    ...BASE_VERTICES[24], ...BASE_VERTICES[31], ...BASE_VERTICES[23],\r\n    ...BASE_VERTICES[23], ...BASE_VERTICES[31], ...BASE_VERTICES[30],\r\n    ...BASE_VERTICES[23], ...BASE_VERTICES[30], ...BASE_VERTICES[22],\r\n    ...BASE_VERTICES[22], ...BASE_VERTICES[30], ...BASE_VERTICES[29],\r\n    ...BASE_VERTICES[22], ...BASE_VERTICES[29], ...BASE_VERTICES[21],\r\n    ...BASE_VERTICES[21], ...BASE_VERTICES[29], ...BASE_VERTICES[28],\r\n    ...BASE_VERTICES[21], ...BASE_VERTICES[28], ...BASE_VERTICES[20],\r\n    ...BASE_VERTICES[20], ...BASE_VERTICES[28], ...BASE_VERTICES[19],\r\n    ...BASE_VERTICES[19], ...BASE_VERTICES[28], ...BASE_VERTICES[27],\r\n    ...BASE_VERTICES[19], ...BASE_VERTICES[27], ...BASE_VERTICES[26],\r\n    ...BASE_VERTICES[19], ...BASE_VERTICES[26], ...BASE_VERTICES[18],\r\n    ...BASE_VERTICES[18], ...BASE_VERTICES[26], ...BASE_VERTICES[25],\r\n    ...BASE_VERTICES[18], ...BASE_VERTICES[25], ...BASE_VERTICES[17],\r\n    //bottom\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[24], ...BASE_VERTICES[25],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[25], ...BASE_VERTICES[26],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[26], ...BASE_VERTICES[27],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[27], ...BASE_VERTICES[28],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[28], ...BASE_VERTICES[29],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[29], ...BASE_VERTICES[30],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[30], ...BASE_VERTICES[31],\r\n    ...BASE_VERTICES[33], ...BASE_VERTICES[31], ...BASE_VERTICES[32],\r\n  ])\r\n\r\n  geometry.setAttribute('position', new BufferAttribute(vertices, 3))\r\n\r\n  // We coordinate our colors to match the corresopnding vertex.\r\n  //\r\n  // prettier-ignore\r\n  let tiles = []\r\n  for (let i = 0; i < 64; i++) {\r\n    tiles.push(...BASE_COLORS[0], ...BASE_COLORS[1], ...BASE_COLORS[2])\r\n  }\r\n  const colors = new Float32Array(tiles)\r\n  geometry.setAttribute('color', new BufferAttribute(colors, 3))\r\n\r\n  // With every face having its “own” vertex (since vertices are always copied), the computed normals correspond\r\n  // exactly to the faces’ directions, leading to a faceted look.\r\n  geometry.computeVertexNormals()\r\n  return geometry\r\n}\r\n\r\nclass tentacleCurve extends Curve {\r\n  constructor(counter) {\r\n    super()\r\n    this.scale = 1\r\n    this.counter = counter\r\n  }\r\n\r\n  getPoint(t, optionalTarget = new Vector3()) {\r\n    const tx = t * 3 - 1.5\r\n    const ty = (1 - t) * Math.sin(2 * Math.PI * t + this.counter)\r\n    const tz = 0\r\n    return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale)\r\n  }\r\n}\r\n\r\nclass Kraken {\r\n  constructor(radius, position, stop) {\r\n    const baseColor = [Math.random() * 0.5, Math.random() * 0.5, Math.random() * 0.5]\r\n\r\n    let material = new MeshPhysicalMaterial({ vertexColors: true })\r\n    material.side = DoubleSide\r\n\r\n    const facetedGeometry = createKrakenHead(baseColor)\r\n    const facetedMesh = new Mesh(facetedGeometry, material)\r\n    facetedMesh.rotateX(-Math.PI)\r\n    facetedMesh.rotateY(Math.PI / 2)\r\n\r\n    //Credit to 3DHitman for the eye texture: https://www.deviantart.com/3dhitman/art/TRUE-BLUE-eye-texture-206860165\r\n    let texture = new TextureLoader().load(EyeTexture)\r\n    material = new MeshPhysicalMaterial({ map: texture })\r\n    const leftEyeGeometry = new SphereGeometry(0.2)\r\n    const leftEye = new Mesh(leftEyeGeometry, material)\r\n    leftEye.position.z = 0.62\r\n    leftEye.rotation.set(0.7, -1.5, 1)\r\n    const rightEyeGeometry = new SphereGeometry(0.2)\r\n    const rightEye = new Mesh(rightEyeGeometry, material)\r\n    rightEye.position.z = -0.62\r\n    rightEye.rotation.set(-0.7, 1.5, 1)\r\n\r\n    const path = new tentacleCurve(0)\r\n    material = new MeshPhysicalMaterial({\r\n      color: new Color(baseColor[0] + 0.3, baseColor[1] + 0.3, baseColor[2] + 0.3)\r\n    })\r\n    material.side = DoubleSide\r\n    const tentacleGeometry = new TubeGeometry(path, 11, 0.2, 3)\r\n\r\n    const d = -2.185,\r\n      h = 0.77,\r\n      r = 0.5\r\n    const tentacle1 = new Mesh(tentacleGeometry, material)\r\n    tentacle1.position.set(d, h + r, 0)\r\n    const tentacle2 = new Mesh(tentacleGeometry, material)\r\n    tentacle2.position.set(d, h - r, 0)\r\n    tentacle2.rotateX(Math.PI / 8)\r\n    const tentacle3 = new Mesh(tentacleGeometry, material)\r\n    tentacle3.position.set(d, h, r)\r\n    tentacle3.rotateX((2 * Math.PI) / 8)\r\n    const tentacle4 = new Mesh(tentacleGeometry, material)\r\n    tentacle4.position.set(d, h, -r)\r\n    tentacle4.rotateX((3 * Math.PI) / 8)\r\n    const tentacle5 = new Mesh(tentacleGeometry, material)\r\n    tentacle5.position.set(d, h + Math.sqrt((r * r) / 2), Math.sqrt((r * r) / 2))\r\n    tentacle5.rotateX((4 * Math.PI) / 8)\r\n    const tentacle6 = new Mesh(tentacleGeometry, material)\r\n    tentacle6.position.set(d, h - Math.sqrt((r * r) / 2), Math.sqrt((r * r) / 2))\r\n    tentacle6.rotateX((5 * Math.PI) / 8)\r\n    const tentacle7 = new Mesh(tentacleGeometry, material)\r\n    tentacle7.position.set(d, h + Math.sqrt((r * r) / 2), -Math.sqrt((r * r) / 2))\r\n    tentacle7.rotateX((6 * Math.PI) / 8)\r\n    const tentacle8 = new Mesh(tentacleGeometry, material)\r\n    tentacle8.position.set(d, h - Math.sqrt((r * r) / 2), -Math.sqrt((r * r) / 2))\r\n    tentacle8.rotateX((7 * Math.PI) / 8)\r\n\r\n    this.tentacles = new Group()\r\n    this.tentacles.add(tentacle1, tentacle2, tentacle3, tentacle4, tentacle5, tentacle6, tentacle7, tentacle8)\r\n    this.group = new Group()\r\n    this.group.add(facetedMesh, leftEye, rightEye, this.tentacles)\r\n\r\n    this.group.position.set(position.x, position.y, position.z)\r\n    this.radius = radius\r\n    this.group.scale.set(radius, radius, radius)\r\n    this.velocity = { x: -0.3, y: 0 }\r\n    this.maxVelocity = { y: 0.1 }\r\n    this.stop = stop\r\n    this.health = 100\r\n    this.cooldown = { hit: 0 }\r\n    this.type = 'kraken'\r\n  }\r\n\r\n  move(position) {\r\n    if (this.group.position.y < position.y) {\r\n      this.velocity.y = Math.min(this.velocity.y + 0.0015, this.maxVelocity.y)\r\n    } else if (this.group.position.y > position.y) {\r\n      this.velocity.y = Math.max(this.velocity.y - 0.0015, -this.maxVelocity.y)\r\n    }\r\n    this.group.position.x += this.velocity.x\r\n    this.group.position.y += this.velocity.y\r\n    this.group.rotation.x = -this.velocity.y * 7 + Math.PI / 2\r\n  }\r\n\r\n  animate(counter) {\r\n    let i = 0\r\n    for (const tentacle of this.tentacles.children) {\r\n      const path = new tentacleCurve(counter / 15 + i)\r\n      const tentacleGeometry = new TubeGeometry(path, 11, 0.2, 3)\r\n      tentacle.geometry = tentacleGeometry\r\n      i++\r\n    }\r\n  }\r\n\r\n  updateCooldowns() {\r\n    if (this.cooldown.hit > 0) {\r\n      this.cooldown.hit--\r\n      if (this.cooldown.hit === 0) {\r\n        setOpacity(this, 1)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Kraken\r\n","export default __webpack_public_path__ + \"static/media/enemyTexture.5837a82b.jpg\";","import {\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  MeshLambertMaterial,\r\n  TextureLoader,\r\n  Mesh,\r\n  Group,\r\n  CylinderGeometry,\r\n  TorusGeometry,\r\n  SphereGeometry\r\n} from 'three'\r\nimport { setOpacity } from '../utilities/utilities'\r\nimport ShipTexture from '../textures/enemyTexture.jpg'\r\n\r\nconst BODY_VERTICES = [\r\n  [0, 0, -0.5], // 0: back middle.\r\n  [0, 0, 0.5], // 1: Front middle.\r\n  [0.7, 0.45, 0], // 2: top right.\r\n  [0.7, -0.45, 0], // 3: Bottom right.\r\n  [-0.7, 0.45, 0], // 4: Top left.\r\n  [-0.7, -0.45, 0], // 5: Bottom left.\r\n  [0, 0.825, 0], // 6: top\r\n  [0, -0.825, 0] // 7: bottom\r\n]\r\n\r\nconst TEXTURE_VERTICES = [\r\n  [0.5, 0.5],\r\n  [0.5, 0.5],\r\n  [1, 0.75],\r\n  [1, 0.25],\r\n  [0, 0.75],\r\n  [0, 0.25],\r\n  [0.5, 1],\r\n  [0.5, 0]\r\n]\r\n\r\nconst COLOR_PALLET = [\r\n  [1, 0.1, 0.1], // 0: red.\r\n  [0.5, 0.1, 0], // 1: Light green.\r\n  [0.6, 0.2, 0], // 2: Bright yellow-ish.\r\n  [0.5, 0.2, 0], // 3. Medium green.\r\n  [0.3, 0.2, 0], // 4: Light cyan-ish.\r\n  [0.5, 0.2, 0] // 5: Dark orange-ish.\r\n]\r\n\r\nconst createShipBody = () => {\r\n  const geometry = new BufferGeometry()\r\n\r\n  const vertices = new Float32Array([\r\n    ...BODY_VERTICES[0],\r\n    ...BODY_VERTICES[1],\r\n    ...BODY_VERTICES[2],\r\n    ...BODY_VERTICES[3],\r\n    ...BODY_VERTICES[4],\r\n    ...BODY_VERTICES[5],\r\n    ...BODY_VERTICES[6],\r\n    ...BODY_VERTICES[7]\r\n  ])\r\n\r\n  geometry.setAttribute('position', new BufferAttribute(vertices, 3))\r\n\r\n  const colors = new Float32Array([\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0],\r\n    ...COLOR_PALLET[0]\r\n  ])\r\n\r\n  geometry.setAttribute('color', new BufferAttribute(colors, 3))\r\n\r\n  const textureCoords = new Float32Array([\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[6],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[7],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[7],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[6],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[6],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[6],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[7],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[7],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[4]\r\n  ])\r\n\r\n  geometry.setAttribute('uv', new BufferAttribute(textureCoords, 2))\r\n\r\n  // prettier-ignore\r\n  geometry.setIndex([\r\n    1,6,4, // Front 10 o clock\r\n    1,4,5, // Front 8 o clock\r\n    1,5,7, // Front 7 o clock\r\n    1,7,3, // Front 5 o clock\r\n    1,3,2, // Front 3 o clock\r\n    1,2,6, // Front 1 o clock\r\n    0,4,6, // Back 1 o clock\r\n    0,6,2, // Back 10 o clock\r\n    0,2,3, // Back 8 o clock\r\n    0,3,7, // Back 7 o clock\r\n    0,7,5, // Back 5 o clock\r\n    0,5,4 // Back 3 o clock\r\n  ])\r\n  // prettier-ignore\r\n\r\n  geometry.computeVertexNormals()\r\n  return geometry\r\n}\r\n\r\nclass EnemyShip {\r\n  constructor(radius, position, stop) {\r\n    this.radius = radius\r\n    this.velocity = { x: -0.1, y: 0 }\r\n    this.maxVelocity = { y: 0.1 }\r\n    this.stop = stop\r\n    this.health = 100\r\n    this.cooldown = { shoot: 0, hit: 0 }\r\n    this.type = 'ship'\r\n\r\n    let texture = new TextureLoader()\r\n    //Credit to Adobe Stock for the deathstar texture: https://stock.adobe.com/images/scifi-panels-futuristic-texture-spaceship-hull-geometric-pattern-3d-illustration/322065570\r\n    const bodyMaterial = new MeshLambertMaterial({ map: texture.load(ShipTexture) })\r\n    const enemyGeom = createShipBody()\r\n    const enemyMesh = new Mesh(enemyGeom, bodyMaterial)\r\n    const jetRingMaterial = new MeshLambertMaterial({ color: 'red' })\r\n    const jetMaterial = new MeshLambertMaterial({ color: 0xb1b1b1 })\r\n    const jetGeometry = new CylinderGeometry(0.14, 0.14, 1.1, 7)\r\n    const jetFrontGeometry = new CylinderGeometry(0.14, 0.26, 0.6, 8)\r\n    const nobGeo = new SphereGeometry(0.14, 7, 7)\r\n    const jetMesh1 = new Mesh(jetGeometry, jetMaterial)\r\n    const jetFrontMesh = new Mesh(jetFrontGeometry, jetMaterial)\r\n    jetFrontMesh.position.y += 0.7\r\n    jetMesh1.position.x += 0.72\r\n    jetMesh1.position.y -= 0.18\r\n    const jetMesh2 = new Mesh(jetGeometry, jetMaterial)\r\n    jetMesh2.position.x -= 0.72\r\n    jetMesh2.position.y -= 0.18\r\n    const jetRingGeo = new TorusGeometry(0.13, 0.03, 20, 20)\r\n    const jetRingMesh1 = new Mesh(jetRingGeo, jetRingMaterial)\r\n    const jetRingMesh2 = new Mesh(jetRingGeo, jetRingMaterial)\r\n    const nob1 = new Mesh(nobGeo, jetMaterial)\r\n    nob1.position.x += 0.72\r\n    nob1.position.y += 0.367\r\n    const nob2 = new Mesh(nobGeo, jetMaterial)\r\n    nob2.position.x -= 0.72\r\n    nob2.position.y += 0.367\r\n    const nob3 = new Mesh(nobGeo, jetMaterial)\r\n    nob3.position.y += 1\r\n    jetRingMesh1.position.x += 0.72\r\n    jetRingMesh2.position.x -= 0.72\r\n    jetRingMesh1.position.y -= 0.73\r\n    jetRingMesh2.position.y -= 0.73\r\n    jetRingMesh1.rotation.x += Math.PI / 2\r\n    jetRingMesh2.rotation.x += Math.PI / 2\r\n\r\n    this.group = new Group()\r\n    this.group.add(enemyMesh)\r\n    this.group.add(jetMesh1)\r\n    this.group.add(jetMesh2)\r\n    this.group.add(jetRingMesh1)\r\n    this.group.add(jetRingMesh2)\r\n    this.group.add(nob1)\r\n    this.group.add(nob2)\r\n    this.group.add(nob3)\r\n    this.group.add(jetRingMesh1)\r\n    this.group.add(jetRingMesh2)\r\n    this.group.add(jetFrontMesh)\r\n    this.group.rotateZ(Math.PI / 2)\r\n    this.group.position.set(position.x, position.y, position.z)\r\n    this.group.scale.set(radius, radius, radius)\r\n  }\r\n\r\n  move(position) {\r\n    if (this.group.position.y < position.y) {\r\n      this.velocity.y = Math.min(this.velocity.y + 0.001, this.maxVelocity.y)\r\n    } else if (this.group.position.y > position.y) {\r\n      this.velocity.y = Math.max(this.velocity.y - 0.001, -this.maxVelocity.y)\r\n    }\r\n    this.group.position.x += this.velocity.x\r\n    this.group.position.y += this.velocity.y\r\n    this.group.rotation.x = -this.velocity.y\r\n  }\r\n\r\n  updateCooldowns() {\r\n    if (this.cooldown.shoot > 0) {\r\n      this.cooldown.shoot--\r\n    }\r\n    if (this.cooldown.hit > 0) {\r\n      this.cooldown.hit--\r\n      if (this.cooldown.hit === 0) {\r\n        setOpacity(this, 1)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default EnemyShip\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {\r\n  BufferGeometry,\r\n  DoubleSide,\r\n  BufferAttribute,\r\n  MeshPhongMaterial,\r\n  Mesh,\r\n  Group, //from ship\r\n  BoxGeometry\r\n} from 'three' // from garnet\r\n//import { Tween, Ease } from '@createjs/tweenjs'\r\n//import {setOpacity} from '../utilities/utilities'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\nconst BASE_VERTICES = [\r\n  [0, 1, 0.5], // 0\r\n  [0.5, 0.9, 0.5], // 1\r\n  [0.9, 0.5, 0.5], //2 right side\r\n  [1, 0, 0.5], //3\r\n  [0.9, -0.5, 0.5], //4\r\n  [0.5, -0.9, 0.5], //5\r\n  [0, -1, 0.5], //6\r\n  [-0.5, -0.9, 0.5], //7\r\n  [-0.9, -0.5, 0.5], //8\r\n  [-1, 0, 0.5], //9\r\n  [-0.9, 0.5, 0.5], //10\r\n  [-0.5, 0.9, 0.5], //11\r\n\r\n  [0, 2.25, 0], // 12\r\n  [1.125, 2.025, 0], // 13\r\n  [2.025, 1.125, 0], //14\r\n  [2.25, 0, 0], //15\r\n  [2.025, -1.125, 0], //16\r\n  [1.125, -2.025, 0], //17\r\n  [0, -2.25, 0], //18\r\n  [-1.125, -2.025, 0], //19\r\n  [-2.025, -1.125, 0], //20\r\n  [-2.25, 0, 0], //21\r\n  [-2.025, 1.125, 0], //22\r\n  [-1.125, 2.025, 0], //23\r\n\r\n  [0, 0.5, -4], // 24\r\n  [0.25, 0.45, -4], // 25\r\n  [0.45, 0.25, -4], //26\r\n  [0.5, 0, -4], //27\r\n  [0.45, -0.25, -4], //28\r\n  [0.25, -0.45, -4], //29\r\n  [0, -0.5, -4], //30\r\n  [-0.25, -0.45, -4], //31\r\n  [-0.45, -0.25, -4], //32\r\n  [-0.5, 0, -4], //33\r\n  [-0.45, 0.25, -4], //34\r\n  [-0.25, 0.45, -4], //35\r\n\r\n  [0, 0.91, -5], // 36\r\n  [0.4875, 0.8775, -5], // 37\r\n  [0.8775, 0.4875, -5], //38\r\n  [0.91, 0, -5], //39\r\n  [0.8775, -0.4875, -5], //40\r\n  [0.4875, -0.8775, -5], //41\r\n  [0, -0.91, -5], //42\r\n  [-0.4875, -0.8775, -5], //43\r\n  [-0.8775, -0.4875, -5], //44\r\n  [-0.91, 0, -5], //45\r\n  [-0.8775, 0.4875, -5], //46\r\n  [-0.4875, 0.8775, -5] //47\r\n]\r\n\r\n// prettier-ignore\r\nconst BASE_COLORS = [\r\n   [  0,   .45,     .65], // bottom darker blue\r\n   //[  .6,    1,     1]  // lighter blue\r\n   [  .5,   .8,     .9]\r\n ]\r\n\r\nconst createSmoothPeridotGeometry = () => {\r\n  const geometry = new BufferGeometry()\r\n\r\n  // This effectively “flattens” our base vertices.\r\n  const vertices = new Float32Array([\r\n    ...BASE_VERTICES[0],\r\n    ...BASE_VERTICES[1],\r\n    ...BASE_VERTICES[2],\r\n    ...BASE_VERTICES[3],\r\n    ...BASE_VERTICES[4],\r\n    ...BASE_VERTICES[5],\r\n    ...BASE_VERTICES[6],\r\n    ...BASE_VERTICES[7],\r\n    ...BASE_VERTICES[8],\r\n    ...BASE_VERTICES[9],\r\n    ...BASE_VERTICES[10],\r\n    ...BASE_VERTICES[11],\r\n\r\n    ...BASE_VERTICES[12],\r\n    ...BASE_VERTICES[13],\r\n    ...BASE_VERTICES[14],\r\n    ...BASE_VERTICES[15],\r\n    ...BASE_VERTICES[16],\r\n    ...BASE_VERTICES[17],\r\n    ...BASE_VERTICES[18],\r\n    ...BASE_VERTICES[19],\r\n    ...BASE_VERTICES[20],\r\n    ...BASE_VERTICES[21],\r\n    ...BASE_VERTICES[22],\r\n    ...BASE_VERTICES[23],\r\n\r\n    ...BASE_VERTICES[24],\r\n    ...BASE_VERTICES[25],\r\n    ...BASE_VERTICES[26],\r\n    ...BASE_VERTICES[27],\r\n    ...BASE_VERTICES[28],\r\n    ...BASE_VERTICES[29],\r\n    ...BASE_VERTICES[30],\r\n    ...BASE_VERTICES[31],\r\n    ...BASE_VERTICES[32],\r\n    ...BASE_VERTICES[33],\r\n    ...BASE_VERTICES[34],\r\n    ...BASE_VERTICES[35],\r\n\r\n    ...BASE_VERTICES[36],\r\n    ...BASE_VERTICES[37],\r\n    ...BASE_VERTICES[38],\r\n    ...BASE_VERTICES[39],\r\n    ...BASE_VERTICES[40],\r\n    ...BASE_VERTICES[41],\r\n    ...BASE_VERTICES[42],\r\n    ...BASE_VERTICES[43],\r\n    ...BASE_VERTICES[44],\r\n    ...BASE_VERTICES[45],\r\n    ...BASE_VERTICES[46],\r\n    ...BASE_VERTICES[47]\r\n  ])\r\n\r\n  geometry.setAttribute('position', new BufferAttribute(vertices, 3))\r\n\r\n  const colors = new Float32Array([\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0],\r\n    ...BASE_COLORS[0], // 23\r\n\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1],\r\n    ...BASE_COLORS[1]\r\n  ])\r\n\r\n  geometry.setAttribute('color', new BufferAttribute(colors, 3))\r\n\r\n  // Note that this is effectively the same as the faceted version’s triangles, except that the use of\r\n  // index values lets us _genuinely share_ a vertex (well, at least at this level) rather than copying\r\n  // them for adjacent triangles.\r\n  //\r\n  // prettier-ignore\r\n  geometry.setIndex([\r\n     // bottom\r\n     0, 6, 1,\r\n     1, 6, 2,\r\n     2, 6, 3,\r\n     3, 6, 4,\r\n     4, 6, 5,\r\n     7, 6, 8,\r\n     8, 6, 9,\r\n     9, 6, 10,\r\n     10, 6, 11,\r\n     11, 6, 0,\r\n     // slope upwards\r\n     12, 0, 13,\r\n     13, 0, 1,\r\n     13, 1, 14,\r\n     14, 1, 2,\r\n     14, 2, 15,\r\n     15, 2, 3,\r\n     15, 3, 16,\r\n     16, 3, 4,\r\n     16, 4, 17,\r\n     17, 4, 5,\r\n     17, 5, 18,\r\n     18, 5, 6,\r\n     18, 6, 19,\r\n     19, 6, 7,\r\n     19, 7, 20,\r\n     20, 7, 8,\r\n     20, 8, 21,\r\n     21, 8, 9,\r\n     21, 9, 22,\r\n     22, 9, 10,\r\n     22, 10, 23,\r\n     23, 10, 11,\r\n     23, 11, 12,\r\n     12, 11, 0,\r\n     // neck\r\n     24, 12, 25,\r\n     25, 12, 13,\r\n     25, 13, 14,\r\n     26, 25, 14,\r\n     26, 14, 27,\r\n     27, 14, 15,\r\n     27, 15, 28,\r\n     28, 15, 16,\r\n     28, 16, 17,\r\n     29, 28, 17,\r\n     29, 17, 30,\r\n     30, 17, 18,\r\n     30, 18, 19,\r\n     31, 30, 19,\r\n     31, 19, 20,\r\n     32, 31, 20,\r\n     32, 20, 33,\r\n     33, 20, 21,\r\n     33, 21, 22,\r\n     34, 33, 22,\r\n     34, 22, 23,\r\n     35, 34, 23,\r\n     35, 23, 12,\r\n     24, 35, 12,\r\n     //rim\r\n    36, 24, 37,\r\n    37, 24, 25,\r\n    37, 25, 38,\r\n    38, 25, 26,\r\n    38, 26, 39,\r\n    39, 26, 27,\r\n    39, 27, 40,\r\n    40, 27, 28,\r\n    40, 28, 41,\r\n    41, 28, 29,\r\n    41, 29, 42,\r\n    42, 29, 30,\r\n    42, 30, 43,\r\n    43, 30, 31,\r\n    43, 31, 44,\r\n    44, 31, 32,\r\n    44, 32, 45,\r\n    45, 32, 33,\r\n    45, 33, 46,\r\n    46, 33, 34,\r\n    46, 34, 47,\r\n    47, 34, 35,\r\n    47, 35, 36,\r\n    36, 35, 24\r\n   ])\r\n\r\n  // Using `setIndex` causes faces/triangles to share vertices, which then causes vertex normal computation\r\n  // to _average out_ the normals of multiple faces, thus creating a “smoothing” effect.\r\n  geometry.computeVertexNormals()\r\n  return geometry\r\n}\r\n\r\nclass HealthPotion {\r\n  constructor(radius, position, stop) {\r\n    const material = new MeshPhongMaterial({ vertexColors: true, opacity: 0.4, transparent: true })\r\n    material.side = DoubleSide\r\n\r\n    const smoothGeometry = createSmoothPeridotGeometry()\r\n    const smoothMesh = new Mesh(smoothGeometry, material)\r\n    smoothMesh.position.x = 1\r\n\r\n    const crossGeometry = new BoxGeometry(2, 0.6, 0.6)\r\n    const crossMaterial = new MeshPhongMaterial({ color: 'red' })\r\n    const crossMesh = new Mesh(crossGeometry, crossMaterial)\r\n    crossMesh.position.set(1.1, 0, -1.5)\r\n\r\n    const crossMesh2 = new Mesh(crossGeometry, crossMaterial)\r\n    crossMesh2.position.set(1.1, 0, -1.5)\r\n    crossMesh2.rotation.y = 1.5708\r\n\r\n    this.group = new Group()\r\n    this.group.add(smoothMesh, crossMesh, crossMesh2)\r\n    this.group.rotation.x = 1.5708\r\n    this.group.scale.set(radius, radius, radius)\r\n    this.group.position.set(position.x, position.y, position.z)\r\n\r\n    this.velocity = { x: -0.2, y: -0.1 }\r\n    this.maxVelocity = { y: 0.1 }\r\n    this.radius = radius\r\n    this.stop = stop\r\n    this.type = 'healthPotion'\r\n  }\r\n\r\n  move(position) {\r\n    if (this.group.position.y < -1) {\r\n      this.velocity.y = Math.min(this.velocity.y + 0.001, this.maxVelocity.y)\r\n    } else if (this.group.position.y > 2) {\r\n      this.velocity.y = Math.max(this.velocity.y - 0.001, -this.maxVelocity.y)\r\n    }\r\n    this.group.position.x += this.velocity.x\r\n    this.group.position.y += this.velocity.y\r\n  }\r\n}\r\n\r\nexport default HealthPotion\r\n","export default __webpack_public_path__ + \"static/media/crystal.50c70b94.jpg\";","/**\r\n * Crystal (texture) source: http://spiralgraphics.biz/packs/crystal_rough/index.htm?5\r\n * @author Damian Browne\r\n */\r\nimport {\r\n  Group,\r\n  Vector3,\r\n  Face3,\r\n  MeshBasicMaterial,\r\n  Mesh,\r\n  Geometry,\r\n  TextureLoader,\r\n  Vector2,\r\n  BackSide,\r\n  MeshPhongMaterial,\r\n  TorusGeometry\r\n} from 'three'\r\nimport Crystal from '../textures/crystal.jpg'\r\nimport { setOpacity } from '../utilities/utilities'\r\n\r\nclass Pylon {\r\n  constructor(radius, position, stop) {\r\n    const loader = new TextureLoader()\r\n    const texture = loader.load(Crystal)\r\n    const geometry = new Geometry()\r\n    geometry.vertices.push(\r\n      new Vector3(-1, 0, 0), //0\r\n      new Vector3(1, 0, 0), //1\r\n      new Vector3(0, 0, -1), //2\r\n      new Vector3(0, 0, 1), //3\r\n      new Vector3(0, -1.75, 0), //4\r\n      new Vector3(0, 1.75, 0) //5\r\n    )\r\n    geometry.faces.push(\r\n      new Face3(2, 0, 4),\r\n      new Face3(3, 4, 0),\r\n      new Face3(0, 2, 5),\r\n      new Face3(3, 0, 5),\r\n      new Face3(1, 2, 4),\r\n      new Face3(1, 4, 3),\r\n      new Face3(1, 5, 2),\r\n      new Face3(1, 3, 5)\r\n    )\r\n    for (let f = 0; f < geometry.faces.length; f++) {\r\n      geometry.faceVertexUvs[geometry.faces[f].materialIndex].push([\r\n        new Vector2(0, 0),\r\n        new Vector2(0.5, 0),\r\n        new Vector2(0.5, 0.5)\r\n      ])\r\n    }\r\n    geometry.uvsNeedUpdate = true\r\n\r\n    const material = new MeshBasicMaterial({\r\n      map: texture,\r\n      side: BackSide,\r\n      transparent: true,\r\n      opacity: 0.9,\r\n      color: 0xccddff\r\n    })\r\n    const crystal = new Mesh(geometry, material)\r\n    const ring = new Mesh(new TorusGeometry(1.2, 0.125, 10, 50), new MeshPhongMaterial({ color: 0xc9ad70 }))\r\n    ring.rotation.x = Math.PI / 2\r\n    this.group = new Group()\r\n    this.group.add(crystal, ring)\r\n\r\n    this.group.position.set(position.x, position.y, position.z)\r\n    this.radius = radius\r\n    this.group.scale.set(radius, radius, radius)\r\n    this.velocity = { x: -0.3, y: 0 }\r\n    this.maxVelocity = { y: 0.3 }\r\n    this.stop = stop\r\n    this.health = 80\r\n    this.cooldown = { hit: 0 }\r\n    this.type = 'pylon'\r\n  }\r\n\r\n  move(position) {\r\n    this.group.position.x += -0.15\r\n    this.group.rotation.y += 0.05\r\n  }\r\n\r\n  updateCooldowns() {\r\n    if (this.cooldown.hit > 0) {\r\n      this.cooldown.hit--\r\n      if (this.cooldown.hit === 0) {\r\n        setOpacity(this, 1)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Pylon\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { FontLoader, TextGeometry, MeshNormalMaterial, Mesh } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Score {\r\n  constructor(UI, score) {\r\n    let loader = new FontLoader()\r\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\r\n      let geometry = new TextGeometry(`${score}`, {\r\n        font: font,\r\n        size: 0.1,\r\n        height: 0.01,\r\n        curveSegments: 4,\r\n        bevelEnabled: false\r\n      })\r\n      geometry.center()\r\n      let material = new MeshNormalMaterial()\r\n      let scoreText = new Mesh(geometry, material)\r\n      UI.score = scoreText\r\n      UI.add(UI.score)\r\n      scoreText.position.set(0.85, 0.7, -1)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Score\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { BoxGeometry, MeshNormalMaterial, MeshPhongMaterial, Mesh, Group } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Healthbar {\r\n  constructor() {\r\n    this.length = 0.8\r\n    let geometry = new BoxGeometry(this.length, 0.05, 0.01)\r\n    geometry.translate(this.length * 0.5, 0, 0)\r\n    let material = new MeshNormalMaterial()\r\n    this.health = new Mesh(geometry, material)\r\n    material = new MeshPhongMaterial({ color: 'grey' })\r\n    geometry = new BoxGeometry(this.length, 0.05, 0.009)\r\n    geometry.translate(this.length * 0.5, 0, 0)\r\n    this.holder = new Mesh(geometry, material)\r\n    this.group = new Group()\r\n    this.group.add(this.health, this.holder)\r\n    this.group.position.set(-1, 0.7, -1)\r\n  }\r\n\r\n  update(health) {\r\n    this.health.geometry = new BoxGeometry((this.length * health) / 100, 0.05, 0.01)\r\n    this.health.geometry.translate(((this.length * health) / 100) * 0.5, 0, 0)\r\n  }\r\n}\r\n\r\nexport default Healthbar\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { FontLoader, TextGeometry, MeshNormalMaterial, Mesh } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Restart {\r\n  constructor(UI, score) {\r\n    let loader = new FontLoader()\r\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\r\n      let geometry = new TextGeometry(`Game Over! You scored: ${score}. Press any key to play again.`, {\r\n        font: font,\r\n        size: 0.05,\r\n        height: 0.01,\r\n        curveSegments: 4,\r\n        bevelEnabled: false\r\n      })\r\n      geometry.center()\r\n      let material = new MeshNormalMaterial()\r\n      let restartText = new Mesh(geometry, material)\r\n      UI.restart = restartText\r\n      UI.add(UI.restart)\r\n      restartText.position.set(0, 0, -1)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Restart\r\n","export default __webpack_public_path__ + \"static/media/shipBubble.d04a31b6.jpg\";","export default __webpack_public_path__ + \"static/media/spaceshiptexture.b95e56e8.jpg\";","import {\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  Group,\r\n  SphereGeometry,\r\n  TextureLoader,\r\n  TorusGeometry,\r\n  CylinderGeometry\r\n} from 'three'\r\nimport { setOpacity } from '../utilities/utilities'\r\nimport ShipBubble from '../textures/shipBubble.jpg'\r\nimport ShipTexture from '../textures/spaceshiptexture.jpg'\r\n\r\nconst COLOR_PALLET = [\r\n  [0.5, 1, 0.5], // 0: Light green.\r\n  [1, 1, 1], // 1: White\r\n  [1, 1, 0.5], // 2: Bright yellow-ish.\r\n  [0, 0.5, 0], // 3. Medium green.\r\n  [0.25, 1, 0.75], // 4: Light cyan-ish.\r\n  [0.5, 0.2, 0], // 5: Dark orange-ish.\r\n  [0, 0.45, 0.65] // 6: dark blue\r\n]\r\n\r\nconst BODY_VERTICES = [\r\n  [-0.7, 0, 0], // 0: Left middle.\r\n  [0, 0, 0.5], // 1: Front middle.\r\n  [0.7, 0, 0], // 2: Right middle.\r\n  [0, 0, -0.5], // 3: Back middle.\r\n  [0, 2.5, 0], // 4: Top.\r\n  [0, -0.3, 0] // 5: Bottom.\r\n]\r\n\r\nconst TEXTURE_VERTICES = [\r\n  [0, 0.5],\r\n  [0.5, 0.5],\r\n  [1, 0.5],\r\n  [0.5, 0.5],\r\n  [0.5, 1],\r\n  [0.5, 0]\r\n]\r\n\r\nconst createSpaceShip = () => {\r\n  const geometry = new BufferGeometry()\r\n\r\n  const vertices = new Float32Array([\r\n    ...BODY_VERTICES[0],\r\n    ...BODY_VERTICES[1],\r\n    ...BODY_VERTICES[2],\r\n    ...BODY_VERTICES[3],\r\n    ...BODY_VERTICES[4],\r\n    ...BODY_VERTICES[5]\r\n  ])\r\n\r\n  geometry.setAttribute('position', new BufferAttribute(vertices, 3))\r\n\r\n  const colors = new Float32Array([\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1],\r\n    ...COLOR_PALLET[1]\r\n  ])\r\n\r\n  geometry.setAttribute('color', new BufferAttribute(colors, 3))\r\n\r\n  const textureCoords = new Float32Array([\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[1],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[4],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[0],\r\n    ...TEXTURE_VERTICES[3],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[2],\r\n    ...TEXTURE_VERTICES[5],\r\n    ...TEXTURE_VERTICES[3]\r\n  ])\r\n\r\n  geometry.setAttribute('uv', new BufferAttribute(textureCoords, 2))\r\n\r\n  // prettier-ignore\r\n  geometry.setIndex([\r\n    0,1,4, // Front upper-left quadrant.\r\n    1,2,4, // Front upper-right quadrant.\r\n    0,5,1, // Front bottom-left quadrant.\r\n    1,5,2, // Front bottom-right quadrant.\r\n    0,4,3, // Rear upper-left quadrant (if looking at it from the front).\r\n    3,4,2, // Rear upper-right quadrant.\r\n    0,3,5, // Rear bottom-left quadrant.\r\n    2,5,3 // Rear bottom-right quadrant.\r\n  ])\r\n  // prettier-ignore\r\n\r\n  // With every face having its “own” vertex (since vertices are always copied), the computed normals correspond\r\n  // exactly to the faces’ directions, leading to a faceted look.\r\n  geometry.computeVertexNormals()\r\n  return geometry\r\n}\r\n\r\nconst WING_VERTICES = [\r\n  [0, 0, 0], // 0: flat center\r\n  [0, 1.8, -0.16], // 1: top back.\r\n  [0, 1.8, 0.16], // 2: top front.\r\n  [0, 1.5, 0.5], // 3: front top.\r\n  [0, 1.5, -0.5], // 4: front bottom.\r\n  [0, -0.3, 0.16], // 5: Bottom front.\r\n  [0, -0.3, -0.16], // 6: Bottom back.\r\n  [0, -0.5, 0.5], // 7: back bottom.\r\n  [0, -0.5, -0.5], // 8: back top.\r\n  [0.3, 0, 0] // 9: divot.\r\n]\r\n\r\nconst createSpaceShipWing = () => {\r\n  const geometry = new BufferGeometry()\r\n\r\n  const vertices = new Float32Array([\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[2],\r\n    ...WING_VERTICES[1], // Left 12 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[1],\r\n    ...WING_VERTICES[4], // Left 11 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[4],\r\n    ...WING_VERTICES[6], // Left 9 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[6],\r\n    ...WING_VERTICES[8], // Left 7 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[8],\r\n    ...WING_VERTICES[7], // Left 6 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[7],\r\n    ...WING_VERTICES[5], // Left 5 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[5],\r\n    ...WING_VERTICES[3], // Left 3 o clock face\r\n    ...WING_VERTICES[0],\r\n    ...WING_VERTICES[3],\r\n    ...WING_VERTICES[2], // Left 1 o clock face\r\n\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[1],\r\n    ...WING_VERTICES[2], // Right 12 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[2],\r\n    ...WING_VERTICES[3], // Right 11 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[3],\r\n    ...WING_VERTICES[5], // Right 9 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[5],\r\n    ...WING_VERTICES[7], // Right 7 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[7],\r\n    ...WING_VERTICES[8], // Right 6 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[8],\r\n    ...WING_VERTICES[6], // Right 5 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[6],\r\n    ...WING_VERTICES[4], // Right 3 o clock face\r\n    ...WING_VERTICES[9],\r\n    ...WING_VERTICES[4],\r\n    ...WING_VERTICES[1] // Right 1 o clock face\r\n  ])\r\n\r\n  geometry.setAttribute('position', new BufferAttribute(vertices, 3))\r\n\r\n  const colors = new Float32Array([\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6],\r\n    ...COLOR_PALLET[6]\r\n  ])\r\n\r\n  geometry.setAttribute('color', new BufferAttribute(colors, 3))\r\n\r\n  // With every face having its “own” vertex (since vertices are always copied), the computed normals correspond\r\n  // exactly to the faces’ directions, leading to a faceted look.\r\n  geometry.computeVertexNormals()\r\n  return geometry\r\n}\r\n\r\nclass Spaceship {\r\n  constructor(boundary) {\r\n    this.boundary = boundary\r\n\r\n    this.velocity = { x: 0, y: 0 }\r\n    this.maxVelocity = { x: 0.3, y: 0.3 }\r\n    this.radius = 1\r\n    this.health = 100\r\n    this.cooldown = { shoot: 0, hit: 0, spin: 0 }\r\n    //Credit to filterForger for the ufobubble texture: https://www.filterforge.com/filters/6842.html\r\n    let texture = new TextureLoader()\r\n    const bubbleMaterial = new MeshLambertMaterial({ map: texture.load(ShipBubble) })\r\n    const material = new MeshLambertMaterial({ vertexColors: true })\r\n    //Credit to Eugene Che for the deathstar texture: https://www.123rf.com/photo_8971306_seamless-space-hull-ship-pattern-as-background.html\r\n    const bodyMaterial = new MeshLambertMaterial({ map: texture.load(ShipTexture) })\r\n    const jetMaterial = new MeshLambertMaterial({ color: 0x616161 })\r\n    const jetRingMaterial = new MeshLambertMaterial({ color: 0x80ffbf })\r\n    const bodyGeometry = createSpaceShip()\r\n    const bodyMesh = new Mesh(bodyGeometry, bodyMaterial)\r\n    const wingGeometryL = createSpaceShipWing()\r\n    const wingGeometryR = createSpaceShipWing()\r\n    const leftWingMesh = new Mesh(wingGeometryL, material)\r\n    const rightWingMesh = new Mesh(wingGeometryR, material)\r\n    leftWingMesh.position.x -= 1\r\n    rightWingMesh.position.x += 1\r\n    rightWingMesh.rotateY(Math.PI)\r\n    const bubbleGeometry = new SphereGeometry(0.35, 4, 4)\r\n    const bubbleMesh = new Mesh(bubbleGeometry, bubbleMaterial)\r\n    const jetGeometry = new CylinderGeometry(0.12, 0.12, 0.4, 3)\r\n    const jetMesh1 = new Mesh(jetGeometry, jetMaterial)\r\n    const jetMesh2 = new Mesh(jetGeometry, jetMaterial)\r\n    const jetRingGeo = new TorusGeometry(0.08, 0.06, 20, 20)\r\n    const jetRingMesh1 = new Mesh(jetRingGeo, jetRingMaterial)\r\n    const jetRingMesh2 = new Mesh(jetRingGeo, jetRingMaterial)\r\n    jetRingMesh1.position.x += 0.35\r\n    jetRingMesh1.position.y -= 0.35\r\n    jetRingMesh1.rotation.x += Math.PI / 2\r\n    jetRingMesh2.position.x -= 0.35\r\n    jetRingMesh2.position.y -= 0.35\r\n    jetRingMesh2.rotation.x += Math.PI / 2\r\n    bubbleMesh.position.y += 1.1\r\n    bubbleMesh.position.z += 0.125\r\n    jetMesh1.position.x += 0.35\r\n    jetMesh1.position.y -= 0.1\r\n    jetMesh2.position.x -= 0.35\r\n    jetMesh2.position.y -= 0.1\r\n\r\n    this.group = new Group()\r\n    this.group.add(bodyMesh)\r\n    this.group.add(leftWingMesh)\r\n    this.group.add(rightWingMesh)\r\n    this.group.add(bubbleMesh)\r\n    this.group.add(jetMesh1)\r\n    this.group.add(jetMesh2)\r\n    this.group.add(jetRingMesh1)\r\n    this.group.add(jetRingMesh2)\r\n  }\r\n\r\n  accelerate(x, y) {\r\n    this.velocity.x = Math.min(this.velocity.x + x, this.maxVelocity.x)\r\n    this.velocity.y = Math.min(this.velocity.y + y, this.maxVelocity.y)\r\n  }\r\n\r\n  move() {\r\n    const width = this.boundary.x,\r\n      height = this.boundary.y\r\n    this.velocity.x *= 0.97\r\n    this.velocity.y *= 0.97\r\n    this.group.position.x = Math.max(\r\n      Math.min(this.group.position.x + this.velocity.x, width - this.radius),\r\n      -width + this.radius\r\n    )\r\n    this.group.position.y = Math.max(\r\n      Math.min(this.group.position.y + this.velocity.y, height - this.radius),\r\n      -height + this.radius\r\n    )\r\n    if (Math.abs(this.group.position.x) === width) {\r\n      this.velocity.x = 0\r\n    }\r\n    if (Math.abs(this.group.position.y) === height) {\r\n      this.velocity.y = 0\r\n    }\r\n    this.group.rotation.x = -this.velocity.y + this.cooldown.spin\r\n  }\r\n\r\n  updateCooldowns() {\r\n    if (this.cooldown.shoot > 0) {\r\n      this.cooldown.shoot--\r\n    }\r\n    if (this.cooldown.hit > 0) {\r\n      this.cooldown.hit--\r\n      if (this.cooldown.hit === 0) {\r\n        setOpacity(this, 1)\r\n      }\r\n    }\r\n    this.cooldown.spin = Math.abs(this.cooldown.spin) > 0.01 ? this.cooldown.spin * 0.96 : 0\r\n  }\r\n}\r\n\r\nexport default Spaceship\r\n","/**\r\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\r\n * to access to objects to anything else.\r\n *\r\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\r\n */\r\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight, Vector3, Group } from 'three'\r\nimport Star from '../cast/star'\r\nimport Earth from '../cast/earth'\r\nimport Moon from '../cast/moon'\r\nimport Laser from '../cast/laser'\r\nimport Kraken from '../cast/kraken'\r\nimport EnemyShip from '../cast/enemyShip'\r\nimport HealthPotion from '../cast/healthpotion'\r\nimport Pylon from '../cast/pylon'\r\nimport Score from '../UI/score'\r\nimport Healthbar from '../UI/healthbar'\r\nimport Restart from '../UI/restart'\r\nimport { setOpacity } from '../utilities/utilities'\r\nimport Spaceship from '../cast/spaceship'\r\n\r\nconst SHIP_DAMAGE = -34 //damage ship does per hit, 34 takes 3 hits to destroy an enemy\r\nconst ENEMY_DAMAGE = -5 //damage enemy does per hit, 10 takes 10 hits to destroy the ship\r\nconst SHIP_SHOOT_COOLDOWN = 15 //frames after ship shoots before it can shoot again\r\nconst ENEMY_SHOOT_COOLDOWN = 75 //frames after ship shoots before it can shoot again\r\nconst HIT_COOLDOWN = 10 //frames after object is damaged before it can take damage again\r\nconst POINTS_PER_ENEMY = 100 //number of points player gets after destroying an enemy\r\nconst POINTS_PER_PYLON = 1000 //number of points player gets after destroying a pylon\r\nconst POTION_AMOUNT = 50 //how much health the potion heals\r\n\r\nconst createDemoUniverse = ({ fieldOfView, width, height, nearPlane, farPlane }) => {\r\n  const boundary = { x: (width / 2) * 0.03, y: (height / 2) * 0.03 }\r\n  let starDensity = 50\r\n  let planetDensity = 2\r\n  let enemyChance = 250\r\n  let healthChance = 1000\r\n  let pylonChance = 1500\r\n  let keyMap = {}\r\n  let background = new Set()\r\n  let enemies = new Set()\r\n  let shipLasers = new Set()\r\n  let enemyLasers = new Set()\r\n  let healthItems = new Set()\r\n  let pylons = new Set()\r\n  let score = 0\r\n  let gameOver = false\r\n  let counter = 0\r\n  let pauseDelay = false\r\n\r\n  const scene = new Scene()\r\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane)\r\n\r\n  const renderer = new WebGLRenderer()\r\n  renderer.setSize(width, height)\r\n\r\n  scene.add(new AmbientLight('white', 0.4))\r\n  const directionalLight = new DirectionalLight('white', 1)\r\n  directionalLight.position.set(-3, 3, 3)\r\n  directionalLight.target.position.set(0, 0, 0)\r\n  scene.add(directionalLight)\r\n  scene.add(directionalLight.target)\r\n\r\n  const UI = new Group()\r\n  scene.add(UI)\r\n\r\n  const updateScore = amount => {\r\n    score += amount\r\n    UI.remove(UI.score)\r\n    new Score(UI, score, camera)\r\n  }\r\n  updateScore(0)\r\n\r\n  UI.healthbar = new Healthbar()\r\n  UI.add(UI.healthbar.group)\r\n\r\n  let ship = new Spaceship(boundary)\r\n  scene.add(ship.group)\r\n  ship.group.rotation.z = -Math.PI / 2\r\n\r\n  const refreshParticle = (object, start = false) => {\r\n    const minZ = -50\r\n    const radius = object.type === 'planet' ? 2 + Math.random() * 3 : 0.1 + Math.random() / 8\r\n    const z = Math.random() * minZ - radius\r\n    const y = (Math.random() * boundary.y * 2 - boundary.y) * (3 + z / minZ)\r\n    const stop = boundary.x * (3 + z / minZ) + radius\r\n    const x = stop - (start ? Math.random() * stop * 2 : 0)\r\n    object.group.position.set(x, y, z)\r\n    object.group.scale.set(radius, radius, radius)\r\n    object.radius = radius\r\n    object.stop = -stop\r\n  }\r\n\r\n  const newPlanet = number => {\r\n    const planet = number === 0 ? new Earth() : new Moon()\r\n    scene.add(planet.group)\r\n    background.add(planet)\r\n    refreshParticle(planet, true)\r\n  }\r\n  for (let i = 0; i < planetDensity; i++) {\r\n    newPlanet(i)\r\n  }\r\n\r\n  const newStar = () => {\r\n    const star = new Star()\r\n    scene.add(star.group)\r\n    background.add(star)\r\n    refreshParticle(star, true)\r\n  }\r\n  for (let i = 0; i < starDensity; i++) {\r\n    newStar()\r\n  }\r\n\r\n  let action = true\r\n\r\n  const newEnemy = () => {\r\n    const r = Math.random()\r\n    const radius = r > 0.6 ? 1 : 1.4\r\n    const x = boundary.x * 2 + radius\r\n    const y = Math.random() * boundary.y * 2 - boundary.y\r\n    const enemy = r > 0.6 ? new Kraken(radius, { x, y, z: 0 }, -x) : new EnemyShip(radius, { x, y, z: 0 }, -x)\r\n    scene.add(enemy.group)\r\n    enemies.add(enemy)\r\n  }\r\n\r\n  const newHealthItem = () => {\r\n    const radius = 0.3\r\n    const x = boundary.x * 2 + radius\r\n    const y = Math.random() * boundary.y * 2 - boundary.y\r\n    const healthpotion = new HealthPotion(radius, { x, y, z: 0 }, -x)\r\n    scene.add(healthpotion.group)\r\n    healthItems.add(healthpotion)\r\n  }\r\n\r\n  const newPylon = () => {\r\n    const radius = 0.7\r\n    const x = boundary.x * 2 + radius\r\n    const y = Math.random() * boundary.y * 2 - boundary.y\r\n    const pylon = new Pylon(radius, { x, y, z: 0 }, -x)\r\n    scene.add(pylon.group)\r\n    pylons.add(pylon)\r\n  }\r\n\r\n  const shoot = craft => {\r\n    const radius = 0.2\r\n    let { x, y, z } = craft.group.position\r\n    let t = craft === ship\r\n    x += (craft.radius + radius) * (t ? 1.5 : -1.5)\r\n    const xVel = craft.velocity.x + (t ? 0.8 : -0.5)\r\n    const stop = (boundary.x + radius) * (t ? 1 : -1)\r\n    const laser = new Laser(t ? 'cyan' : 'red', radius, { x, y, z }, xVel, stop)\r\n    scene.add(laser.group)\r\n    if (t) {\r\n      shipLasers.add(laser)\r\n      craft.cooldown.shoot = SHIP_SHOOT_COOLDOWN\r\n    } else {\r\n      enemyLasers.add(laser)\r\n      craft.cooldown.shoot = ENEMY_SHOOT_COOLDOWN\r\n    }\r\n  }\r\n\r\n  const updateShip = () => {\r\n    ship.move()\r\n    ship.updateCooldowns()\r\n  }\r\n\r\n  const update = (set, enemy = false, shipCollision = false, enemyCollision = false) => {\r\n    set.forEach(o => {\r\n      o.move(ship.group.position)\r\n      if (enemy) {\r\n        if (o.type === 'kraken') {\r\n          o.animate(counter)\r\n        } else if (o.type === 'ship' && o.cooldown.shoot === 0) {\r\n          shoot(o)\r\n          o.cooldown.shoot = ENEMY_SHOOT_COOLDOWN\r\n        }\r\n        o.updateCooldowns()\r\n      }\r\n      let collision = false\r\n      if (shipCollision) {\r\n        collision = checkCollision(o, ship)\r\n        if (collision) {\r\n          if (o.type === 'healthPotion') {\r\n            updateHealth(ship, POTION_AMOUNT, HIT_COOLDOWN)\r\n          } else {\r\n            updateHealth(ship, ENEMY_DAMAGE, HIT_COOLDOWN)\r\n            if (ship.health === 0) {\r\n              endGame()\r\n            }\r\n          }\r\n          if (!enemy) {\r\n            remove(set, o)\r\n          }\r\n        }\r\n      }\r\n      if (enemyCollision) {\r\n        let targets = new Set([...enemies, ...pylons])\r\n        targets.forEach(t => {\r\n          collision = checkCollision(o, t)\r\n          if (collision) {\r\n            updateHealth(t, SHIP_DAMAGE, HIT_COOLDOWN)\r\n            if (t.health === 0) {\r\n              remove(t.type === 'pylon' ? pylons : enemies, t)\r\n              updateScore(t.type === 'pylon' ? POINTS_PER_PYLON : POINTS_PER_ENEMY)\r\n            }\r\n            remove(set, o)\r\n          }\r\n        })\r\n      }\r\n      if ((!enemyCollision && o.group.position.x <= o.stop) || (enemyCollision && o.group.position.x >= o.stop)) {\r\n        if (o.type === 'star' || o.type === 'planet') {\r\n          refreshParticle(o)\r\n        } else {\r\n          remove(set, o)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkCollision = (a, b) => {\r\n    if ((a.cooldown && a.cooldown.hit > 0) || (b.cooldown && b.cooldown.hit > 0)) {\r\n      return false\r\n    }\r\n    return getDistance(a, b) <= a.radius + b.radius\r\n  }\r\n\r\n  const getDistance = (a, b) => {\r\n    return (\r\n      Math.sqrt(\r\n        Math.pow(a.group.position.x - b.group.position.x, 2) + Math.pow(a.group.position.y - b.group.position.y, 2)\r\n      ) -\r\n      a.radius / 2 -\r\n      b.radius / 2\r\n    )\r\n  }\r\n\r\n  const updateHealth = (object, amount, cooldown) => {\r\n    if (object.cooldown.hit === 0) {\r\n      object.health = Math.min(Math.max(object.health + amount, 0), 100)\r\n      object.cooldown.hit = cooldown\r\n      setOpacity(object, 0.2)\r\n      if (object === ship) {\r\n        UI.healthbar.update(ship.health)\r\n      }\r\n    }\r\n  }\r\n\r\n  const remove = (set, object) => {\r\n    scene.remove(object.group)\r\n    set.delete(object)\r\n  }\r\n\r\n  const toggleAction = () => {\r\n    action = !action\r\n    pauseDelay = true\r\n  }\r\n\r\n  const getAction = () => {\r\n    return action\r\n  }\r\n\r\n  const getGameOver = () => {\r\n    return gameOver\r\n  }\r\n\r\n  const updateCamera = () => {\r\n    camera.rotation.set((0.2 * ship.group.position.y) / boundary.y, (0.2 * -ship.group.position.x) / boundary.x, 0)\r\n    UI.position.set(camera.position.x, camera.position.y, camera.position.z)\r\n    UI.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n  }\r\n\r\n  const endGame = () => {\r\n    scene.remove(ship.group)\r\n    new Restart(UI, score, camera)\r\n    gameOver = true\r\n  }\r\n\r\n  const restart = () => {\r\n    UI.remove(UI.restart)\r\n    ship = new Spaceship(boundary)\r\n    scene.add(ship.group)\r\n    ship.group.rotation.z = -Math.PI / 2\r\n    enemies.forEach(e => {\r\n      remove(enemies, e)\r\n    })\r\n    shipLasers.forEach(e => {\r\n      remove(shipLasers, e)\r\n    })\r\n    enemyLasers.forEach(e => {\r\n      remove(enemyLasers, e)\r\n    })\r\n    healthItems.forEach(e => {\r\n      remove(healthItems, e)\r\n    })\r\n    pylons.forEach(e => {\r\n      remove(pylons, e)\r\n    })\r\n    score = 0\r\n    updateScore(0)\r\n    updateHealth(ship, 0, 1)\r\n    gameOver = false\r\n  }\r\n\r\n  const animate = () => {\r\n    window.requestAnimationFrame(animate)\r\n    renderer.render(scene, camera)\r\n    getInput()\r\n    if (!action) {\r\n      return\r\n    }\r\n\r\n    updateCamera()\r\n    updateShip()\r\n    update(background)\r\n    update(enemies, true, !gameOver)\r\n    update(shipLasers, false, false, true)\r\n    update(enemyLasers, false, !gameOver)\r\n    update(healthItems, false, !gameOver)\r\n    update(pylons, true)\r\n\r\n    counter++\r\n    const random = Math.random()\r\n    if (Math.floor(random * enemyChance) === 0) {\r\n      newEnemy()\r\n    }\r\n    if (Math.floor(random * healthChance) === 0) {\r\n      newHealthItem()\r\n    }\r\n    if (Math.floor(random * pylonChance) === 0) {\r\n      newPylon()\r\n    }\r\n  }\r\n\r\n  const vector = new Vector3()\r\n  const getInput = () => {\r\n    if (keyMap[38] | keyMap[87]) {\r\n      if (action) {\r\n        if (ship.cooldown.spin === 0 && ship.velocity.y < (-ship.maxVelocity.y * 2) / 3) {\r\n          ship.cooldown.spin = Math.PI * 2\r\n        }\r\n        ship.accelerate(0, 0.01)\r\n      } else {\r\n        camera.position.add(camera.getWorldDirection(vector))\r\n      }\r\n    }\r\n    if (keyMap[40] | keyMap[83]) {\r\n      if (action) {\r\n        if (ship.cooldown.spin === 0 && ship.velocity.y > (ship.maxVelocity.y * 2) / 3) {\r\n          ship.cooldown.spin = -Math.PI * 2\r\n        }\r\n        ship.accelerate(0, -0.01)\r\n      } else {\r\n        camera.position.sub(camera.getWorldDirection(vector))\r\n      }\r\n    }\r\n    if (keyMap[37] | keyMap[65]) {\r\n      if (action) {\r\n        ship.accelerate(-0.01, 0)\r\n      } else {\r\n        camera.rotateY(Math.PI / 2)\r\n        camera.position.add(camera.getWorldDirection(vector))\r\n        camera.rotateY(-Math.PI / 2)\r\n      }\r\n    }\r\n    if (keyMap[39] | keyMap[68]) {\r\n      if (action) {\r\n        ship.accelerate(0.01, 0)\r\n      } else {\r\n        camera.rotateY(Math.PI / 2)\r\n        camera.position.sub(camera.getWorldDirection(vector))\r\n        camera.rotateY(-Math.PI / 2)\r\n      }\r\n    }\r\n    if (keyMap[32] | keyMap[73]) {\r\n      if (action && ship.cooldown.shoot === 0) {\r\n        shoot(ship)\r\n        ship.cooldown.shoot = SHIP_SHOOT_COOLDOWN\r\n      }\r\n    }\r\n    if (keyMap[80]) {\r\n      if (!pauseDelay) {\r\n        toggleAction()\r\n        camera.position.set(0, 0, 15)\r\n      }\r\n    } else {\r\n      pauseDelay = false\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyMap,\r\n    camera,\r\n    renderer,\r\n    animate,\r\n    toggleAction,\r\n    getAction,\r\n    getGameOver,\r\n    restart\r\n  }\r\n}\r\n\r\nexport { createDemoUniverse }\r\n","/**\r\n * This React app serves as a very thin “wrapper” around what is otherwise pure three.js code.\r\n * Although various “React three.js components” are available, these can get complicated and\r\n * possibly overly opinionated for beginners. We take the approach here of separating React and\r\n * three.js code from each other as much as possible.\r\n */\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\nimport './App.css'\r\n\r\nimport { createDemoUniverse } from './universes/demo-universe'\r\n\r\nconst DEFAULT_FIELD_OF_VIEW = 75\r\nconst DEFAULT_NEAR_PLANE = 0.1\r\nconst DEFAULT_FAR_PLANE = 1000\r\nconst DEFAULT_DISTANCE_FROM_ORIGIN = 15\r\n\r\nconst RADIAN_CONVERSION = Math.PI / 180\r\n\r\nconst App = () => {\r\n  const [universe, setUniverse] = useState(null)\r\n  const [cameraControl, setCameraControl] = useState(false)\r\n  const viewport = useRef()\r\n\r\n  useEffect(() => {\r\n    const viewportElement = viewport?.current\r\n    if (!viewportElement) {\r\n      return\r\n    }\r\n\r\n    const universe = createDemoUniverse({\r\n      fieldOfView: DEFAULT_FIELD_OF_VIEW,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      nearPlane: DEFAULT_NEAR_PLANE,\r\n      farPlane: DEFAULT_FAR_PLANE\r\n    })\r\n\r\n    const { camera, renderer } = universe\r\n    camera.position.z = DEFAULT_DISTANCE_FROM_ORIGIN\r\n\r\n    // Development note: three.js does not know that React exists. It is thus necessary to add\r\n    // three.js’s element manually. However, this also means that the usual auto-loading behavior\r\n    // of a React app may result in multiple copies of this element: because the previous element\r\n    // isn’t under React’s control, it may continue to sit there even after the app’s code has\r\n    // changed. As a result, always try to _reload the page_ if the 3D viewport does not seem to\r\n    // update as expected.\r\n    //\r\n    // In addition, if the React portion of the app gets overly complicated, the rendering cycle\r\n    // may start to interfere with this manual addition. Use this playground for applications that\r\n    // are primarily three.js code, with React providing just basic event handling and UI.\r\n    viewportElement.innerHTML = '' // Cheapo clearing of prior children.\r\n    viewportElement.appendChild(renderer.domElement)\r\n\r\n    universe.animate()\r\n    setUniverse(universe)\r\n  }, [viewport])\r\n\r\n  const handleMouseDown = () => {\r\n    setCameraControl(!universe.getAction())\r\n  }\r\n\r\n  const handleMouseMove = event => {\r\n    if (!cameraControl || !universe) {\r\n      return\r\n    }\r\n\r\n    const { camera } = universe\r\n    camera.translateZ(-DEFAULT_DISTANCE_FROM_ORIGIN)\r\n    camera.rotateY(event.movementX * RADIAN_CONVERSION)\r\n    camera.rotateX(event.movementY * RADIAN_CONVERSION)\r\n    camera.translateZ(DEFAULT_DISTANCE_FROM_ORIGIN)\r\n  }\r\n\r\n  const handleMouseUp = () => {\r\n    setCameraControl(false)\r\n  }\r\n\r\n  const handleKeys = event => {\r\n    if (universe.getGameOver() && event.type === 'keydown') {\r\n      universe.restart()\r\n    }\r\n    universe.keyMap[event.keyCode] = event.type === 'keydown';\r\n  }\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <header></header>\r\n      <main ref={viewport} onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp} onKeyDown={handleKeys} onKeyUp={handleKeys} tabIndex=\"0\"></main>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}